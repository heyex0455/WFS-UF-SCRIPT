local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Made by ex0",
   LoadingTitle = "WFS MADE BY EX0",
   LoadingSubtitle = "by ex0",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "NFL Universe Footballüèà | made by ex0",
      Subtitle = "Key System",
      Note = "Join discord https://discord.gg/QPyZpGFkgQ | for key", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/jP3Pp0hd"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("powers‚ö°", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Thank you for buying WFS",
   Content = "You are whitelisted",
   Duration = 5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = { -- Duplicate this table (or remove it) to add and remove buttons to the notification.
         Name = "Okay!",
         Callback = function()
            print("The user tapped Okay!")
         end
      },
   },
})

-- Walk Speed Slider
local Slider = MainTab:CreateSlider({
   Name = "Walk Speed",
   Range = {0, 500},
   Increment = 16,
   Suffix = "Bananas",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

-- Jump High Toggle
local isJumpHigh = false  -- Track the state of the toggle (true for high jump, false for normal)

local ToggleJumpHigh = MainTab:CreateToggle({
   Name = "Jump High",
   CurrentValue = false,
   Flag = "JumpHighToggle", -- A flag is the identifier for the configuration file
   Callback = function(Value)
       isJumpHigh = Value  -- Update the state of the toggle

       local character = game.Players.LocalPlayer.Character
       if character and character:FindFirstChild("Humanoid") then
           local humanoid = character.Humanoid
           
           if isJumpHigh then
               -- Enable high jump
               humanoid.JumpPower = 150  -- Higher jump power
               humanoid.JumpHeight = 100  -- Higher jump height
           else
               -- Reset to normal jump
               humanoid.JumpPower = 50  -- Default jump power
               humanoid.JumpHeight = 7  -- Default jump height
           end
       end
   end,
})

-- Example of another Button (You can add more if needed)

local Tab = Window:CreateTab("fun activityüß∏", 4483362458) -- Title, Image

local ButtonExample = MainTab:CreateButton({
   Name = "Long Arms",
   Callback = function()
       -- Add long arms functionality here (you can paste the earlier long arms script code here)
   end,
})

